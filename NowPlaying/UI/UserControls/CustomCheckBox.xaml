<UserControl x:Class="NowPlaying.UI.UserControls.CustomCheckBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             mc:Ignorable="d"
             d:DesignHeight="16" d:DesignWidth="16">
    <UserControl.Resources>
        <Color x:Key="FullOpacity">#00000000</Color>
        <Color x:Key="White">#FFF9F9F9</Color>
        <Color x:Key="SpotifyGreen">#FF1DB954</Color>
        <Color x:Key="SpotifyGray">#FFB3B3B3</Color>
        <Color x:Key="SpotifyGrayNight">#FF7E7E7E</Color>
        <SolidColorBrush x:Key="SpotifyGrayBrush" Color="{StaticResource SpotifyGray}"/>
        <SolidColorBrush x:Key="SpotifyGreenBrush" Color="{StaticResource SpotifyGreen}"/>
    </UserControl.Resources>
    <Grid>
        <Viewbox>
            <CheckBox x:Name="DefaultCheckBox" HorizontalAlignment="Left" Height="16" Width="16" VerticalAlignment="Top" Style="{DynamicResource CheckBoxStyle1}" Checked="DefaultCheckBox_Checked" Unchecked="DefaultCheckBox_Unchecked">
                <CheckBox.Resources>
                    <Style x:Key="FocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <SolidColorBrush x:Key="OptionMark.Static.Background" Color="{StaticResource FullOpacity}"/>
                    <SolidColorBrush x:Key="OptionMark.Static.Border" Color="{StaticResource SpotifyGray}"/>
                    <Style x:Key="OptionMarkFocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="{StaticResource SpotifyGrayNight}"/>
                    <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="{StaticResource SpotifyGreen}"/>
                    <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="{StaticResource SpotifyGreen}"/>
                    <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
                    <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
                    <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
                    <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="{StaticResource SpotifyGrayNight}"/>
                    <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="{StaticResource SpotifyGray}"/>
                    <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="{StaticResource SpotifyGreen}"/>
                    <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="{StaticResource SpotifyGreen}"/>
                    <Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
                        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                        <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type CheckBox}">
                                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,1,0,0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="15" Height="14">
                                            <Grid x:Name="markGrid">
                                                <Path x:Name="optionMark" Data="M-1.4403365,-1.36649 L17.284038,-1.36649 17.284038,16.39788 -1.4403365,16.39788 -1.4403365,0 z" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="-1.47,-1.374,-1.374,-1.657" Opacity="0" Stretch="None" HorizontalAlignment="Left" Width="15.844" Height="15.031" VerticalAlignment="Top"/>
                                                <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
                                            </Grid>
                                        </Border>
                                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="HasContent" Value="true">
                                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                            <Setter Property="Padding" Value="4,-1,0,0"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="true">
                                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="true">
                                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="{x:Null}">
                                            <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </CheckBox.Resources>
            </CheckBox >
        </Viewbox>
    </Grid>
</UserControl>
